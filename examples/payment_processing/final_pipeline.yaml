# Final Payment Processing Pipeline
# Demonstrates payment validation, enrichment, and fraud detection

runner:
  type: DirectRunner
  options: {}

transforms:
  # Read input payment data
  - name: ReadPaymentData
    type: ReadFromText
    file_pattern: examples/payment_processing/data/payments.csv
    outputs:
      - raw_payments

  # Parse CSV records into payment dictionaries
  - name: ParsePayments
    type: Map
    fn_module: examples.payment_processing.utils
    fn_name: parse_csv_line_wrapper
    params:
      field_names: "transaction_id,user_id,amount,currency,timestamp,payment_method,ip_address,card_number"
    inputs:
      - raw_payments
    outputs:
      - parsed_payments

  # Validate payments and route them accordingly
  - name: ValidatePayments
    type: PaymentValidationTransform
    required_fields:
      - transaction_id
      - user_id
      - amount
      - currency
      - timestamp
    amount_field: amount
    min_amount: 0.01
    max_amount: 10000.00
    inputs:
      - parsed_payments
    outputs:
      - small_payments
      - medium_payments
      - large_payments
      - invalid_payments

  # Enrich valid payments with additional information
  - name: EnrichSmallPayments
    type: PaymentEnrichmentTransform
    timestamp_field: timestamp
    timezone: UTC
    add_fields:
      processing_type: small_payment
      priority: low
    inputs:
      - small_payments
    outputs:
      - enriched_small_payments

  - name: EnrichMediumPayments
    type: PaymentEnrichmentTransform
    timestamp_field: timestamp
    timezone: UTC
    add_fields:
      processing_type: medium_payment
      priority: medium
    inputs:
      - medium_payments
    outputs:
      - enriched_medium_payments

  - name: EnrichLargePayments
    type: PaymentEnrichmentTransform
    timestamp_field: timestamp
    timezone: UTC
    add_fields:
      processing_type: large_payment
      priority: high
    inputs:
      - large_payments
    outputs:
      - enriched_large_payments

  # Merge all enriched payments
  - name: MergeEnrichedPayments
    type: Flatten
    inputs:
      - enriched_small_payments
      - enriched_medium_payments
      - enriched_large_payments
    outputs:
      - all_enriched_payments

  # Perform fraud detection on all payments
  - name: DetectFraudulentPayments
    type: FraudDetectionTransform
    amount_field: amount
    timestamp_field: timestamp
    ip_address_field: ip_address
    card_number_field: card_number
    velocity_threshold: 3
    velocity_window_minutes: 5
    inputs:
      - all_enriched_payments
    outputs:
      - low_risk_payments
      - medium_risk_payments
      - high_risk_payments
      - error_payments

  # Convert low risk payments to USD for reporting
  - name: ConvertLowRiskPayments
    type: CurrencyConversionTransform
    amount_field: amount
    source_currency_field: currency
    target_currency: USD
    base_currency: USD
    exchange_rates:
      EUR: 1.1
      GBP: 1.3
      JPY: 0.0091
      CAD: 0.75
      AUD: 0.68
    inputs:
      - low_risk_payments
    outputs:
      - converted_low_risk_payments

  # Write results to output files
  - name: WriteLowRiskPayments
    type: WriteToText
    file_path_prefix: examples/payment_processing/output/low_risk_payments
    inputs:
      - converted_low_risk_payments

  - name: WriteMediumRiskPayments
    type: WriteToText
    file_path_prefix: examples/payment_processing/output/medium_risk_payments
    inputs:
      - medium_risk_payments

  - name: WriteHighRiskPayments
    type: WriteToText
    file_path_prefix: examples/payment_processing/output/high_risk_payments
    inputs:
      - high_risk_payments

  - name: WriteInvalidPayments
    type: WriteToText
    file_path_prefix: examples/payment_processing/output/invalid_payments
    inputs:
      - invalid_payments
